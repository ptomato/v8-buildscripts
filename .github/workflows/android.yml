name: Build for Android

on:
  workflow_dispatch:
    inputs:
      publish:
        description: Artifacts to publish
        required: true
        default: libraries
        type: choice
        options:
          - libraries
          - libraries_headers
          - all_build_products

env:
  CACHE_KEY_SUFFIX: v2

jobs:
  build:
    runs-on: ubuntu-latest

    container:
      image: kudo/ubuntu-nonroot:20.04
      options: --user root
      env:
        DEBIAN_FRONTEND: noninteractive
        TZ: UTC

    steps:
      - name: Print environment varariables
        run: env | grep GITHUB | sort
      - name: Setup docker workspace
        run: |
            sudo sh -c "chown -R ubuntu $HOME"
            sudo sh -c "chmod 777 $GITHUB_WORKSPACE"
            # sudo sh -c "chmod 777 $GITHUB_WORKSPACE/../../_temp"
            sudo sh -c "chmod 777 /home"

      - uses: actions/checkout@v3

      - name: Setup Ubuntu environment
        run: |
          sudo ln -fs /usr/share/zoneinfo/UTC /etc/localtime
          sudo apt-get update
          sudo apt-get upgrade -y
          sudo apt-get install -y apt-utils git libatomic1-i386-cross lsb-core \
            ninja-build nodejs npm openjdk-8-jre openjdk-8-jdk python sudo wget

      - name: Export settings from npm package
        run: npm run export_npm_env

      # - uses: actions/cache@v3
      #   with:
      #     path: v8
      #     key: android-v8-${{ env.V8_VERSION }}-${{ env.CACHE_KEY_SUFFIX }}

      - name: Setup V8 build environment
        run: |
          scripts/setup.sh -r ${{ env.V8_VERSION }} android
          sudo sh -c 'echo "/usr/i686-linux-gnu/lib" >> /etc/ld.so.conf.d/i386-linux-gnu.conf' && sudo ldconfig

      - name: Patch V8
        run: scripts/patch.sh android

      # - name: Build V8 arm
      #   run: |
      #     scripts/build.sh android arm
      #     scripts/archive.sh android arm ${{ inputs.publish }}

      # - name: Build V8 x86
      #   run: |
      #     scripts/build.sh android x86
      #     scripts/archive.sh android x86 ${{ inputs.publish }}

      - name: Build V8 arm64
        run: |
          scripts/build.sh android arm64
          scripts/archive.sh android arm64 ${{ inputs.publish }}

      # - name: Build V8 x64
      #   run: |
      #     scripts/build.sh android x64
      #     scripts/archive.sh android x64 ${{ inputs.publish }}

      - name: Archive
        run: |
          tar -cvf dist.tar dist

      - uses: actions/upload-artifact@v3
        with:
          name: dist-${{ env.V8_VERSION }}-${{ inputs.publish }}
          path: dist.tar


###############################################################
# Backup config for triggering arch matrix build
# Archiving is not finished yet.
# Since actions/cache unable to work well, there will be 4 gclient sync.
# It's getting a little waste from network bandwidth.
# That's the main reason not adopted.
###############################################################
# jobs:
#   build-golden:
#     runs-on: ubuntu-latest
#
#     container:
#       image: kudo/ubuntu-nonroot:18.04
#       env:
#         DEBIAN_FRONTEND: noninteractive
#         TZ: UTC
#         CACHE_KEY_SUFFIX: v3
#
#     steps:
#       - name: Setup docker workspace
#         run: |
#             sudo sh -c "chown -R ubuntu $HOME"
#             sudo sh -c "chmod 777 $GITHUB_WORKSPACE"
#             sudo sh -c "chmod 777 $GITHUB_WORKSPACE/../../_temp"
#             sudo sh -c "chmod 777 /home"
#
#       - uses: actions/checkout@v3
#
#       - name: Setup Ubuntu environment
#         run: |
#           sudo ln -fs /usr/share/zoneinfo/UTC /etc/localtime
#           sudo apt-get update
#           sudo apt-get upgrade -y
#           sudo apt-get install -y apt-utils git libatomic1-i386-cross lsb-core \
#             ninja-build nodejs npm openjdk-8-jre openjdk-8-jdk python sudo wget
#
#       - name: Export settings from npm package
#         run: npm run export_npm_env
#
#       # - uses: actions/cache@v3
#       #   id: v8-source-cache
#       #   with:
#       #     path: v8
#       #     key: android-v8-${{ env.V8_VERSION }}-${{ env.CACHE_KEY_SUFFIX }}
#       #     restore-keys: |
#       #       android-v8-
#
#       - name: Setup V8 build environment
#         run: |
#           scripts/setup.sh -r ${{ env.V8_VERSION }} android
#           sudo sh -c 'echo "/usr/i686-linux-gnu/lib" >> /etc/ld.so.conf.d/i386-linux-gnu.conf' && sudo ldconfig
#
#       - name: Patch V8
#         run: scripts/patch.sh android
#
#       - name: Build V8 arm
#         run: |
#           scripts/build.sh android arm
#
#       - uses: actions/upload-artifact@v3
#         with:
#           name: build-intl-arm
#           path: build
#
#   build-remains:
#     needs: build-golden
#     runs-on: ubuntu-latest
#
#     strategy:
#       matrix:
#         arch: [arm, x86, arm64, x64]
#
#     container:
#       image: kudo/ubuntu-nonroot:18.04
#       env:
#         DEBIAN_FRONTEND: noninteractive
#         TZ: UTC
#         CACHE_KEY_SUFFIX: v3
#
#     steps:
#       - name: Setup docker workspace
#         run: |
#             sudo sh -c "chown -R ubuntu $HOME"
#             sudo sh -c "chmod 777 $GITHUB_WORKSPACE"
#             sudo sh -c "chmod 777 $GITHUB_WORKSPACE/../../_temp"
#             sudo sh -c "chmod 777 /home"
#
#       - uses: actions/checkout@v3
#
#       - name: Setup Ubuntu environment
#         run: |
#           sudo ln -fs /usr/share/zoneinfo/UTC /etc/localtime
#           sudo apt-get update
#           sudo apt-get upgrade -y
#           sudo apt-get install -y apt-utils git libatomic1-i386-cross lsb-core \
#             ninja-build nodejs npm openjdk-8-jre openjdk-8-jdk python sudo wget
#
#       - name: Export settings from npm package
#         run: npm run export_npm_env
#
#       # - uses: actions/cache@v3
#       #   id: v8-source-cache
#       #   with:
#       #     path: v8
#       #     key: android-v8-${{ env.V8_VERSION }}-${{ env.CACHE_KEY_SUFFIX }}
#       #     restore-keys: |
#       #       android-v8-
#
#       - name: Setup V8 build environment
#         run: |
#           scripts/setup.sh -r ${{ env.V8_VERSION }} android
#           sudo sh -c 'echo "/usr/i686-linux-gnu/lib" >> /etc/ld.so.conf.d/i386-linux-gnu.conf' && sudo ldconfig
#
#       - name: Patch V8
#         run: scripts/patch.sh android
#
#       - name: Build V8 arm
#         run: |
#           scripts/build.sh android ${{ env.arch }}
#
#       - uses: actions/upload-artifact@v3
#         with:
#           name: build-${{ matrix.variant }}-${{ matrix.arch }}
#           path: build
